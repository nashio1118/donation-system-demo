# 寄付者管理システム - Cursor Rules

## プロジェクト概要
学校や団体の寄付金管理を効率化するWebシステム。Googleスプレッドシートと連携し、寄付者の情報を収集・管理する。
クライアント（後から設定をいじる人）は、パソコンに疎いため、管理設定はできるだけシンプルにしておく。
## 技術スタック
- **フロントエンド**: HTML5, CSS3, JavaScript (ES6+)
- **バックエンド**: Google Apps Script (GAS)
- **データベース**: Googleスプレッドシート
- **デプロイ**: GitHub Pages
- **CSSフレームワーク**: Tailwind CSS

## ファイル構造
```
python_lesson/
├── フロントエンド
│   ├── page1.html          # 1ページ目フォーム（基本情報）
│   ├── page2.html          # 2ページ目フォーム（寄付者詳細）
│   ├── index.html          # メインページ
│   ├── demo.html           # デモページ
│   ├── js/
│   │   ├── page1.js        # 1ページ目ロジック
│   │   ├── form.js         # 2ページ目ロジック
│   │   ├── sheets.js       # GAS連携クラス
│   │   └── calculator.js   # 計算ロジック
│   └── css/
│       └── style.css       # スタイルシート
├── バックエンド
│   └── google-apps-script-config.gs  # GASメインコード
├── 設定ファイル
│   ├── config/settings.json
│   └── 各種設定用スプレッドシート
└── ドキュメント
    ├── README.md
    ├── セットアップ手順書
    └── デモ手順書
```

## 主要機能
1. **2ページ構成のフォーム**
   - 1ページ目：基本情報（氏名、学年、振込日、振込金額、負担金、奨励会負担金）
   - 2ページ目：寄付者詳細情報（寄付者名、金額、返礼品）

2. **Googleスプレッドシート連携**
   - 1ページ目データ整理シート
   - 2ページ目データ整理シート
   - 寄付金一覧シート
   - 返礼品一覧シート

3. **返礼品システム**
   - 金額に応じた返礼品自動選択
   - クリアファイル枚数選択機能

4. **データ検証機能**
   - 金額の照合チェック
   - 必須項目のバリデーション

## コーディング規約

### JavaScript
- ES6+を使用（クラス、アロー関数、async/await）
- クラスベースの設計
- エラーハンドリングを適切に実装
- コメントは日本語で記述

### HTML
- セマンティックなHTML構造
- アクセシビリティを考慮
- Tailwind CSSクラスを使用

### CSS
- Tailwind CSSを基本とする
- レスポンシブデザイン
- カスタムCSSは最小限に

### Google Apps Script
- 関数名は日本語でも可
- エラーログを適切に出力
- CORS対応を考慮

## データフロー
1. **1ページ目**: 基本情報 → localStorage → 2ページ目
2. **2ページ目**: 寄付者情報 → GAS → Googleスプレッドシート
3. **スプレッドシート**: データ整理 → 統計 → 返礼品一覧

## バリデーションルール
- **必須項目**: 氏名、学年、振込日、寄付者名、金額
- **金額照合**: 1ページ目寄付金 = 2ページ目合計金額
- **返礼品**: 金額に応じた返礼品選択

## スプレッドシート構造
- **1ページ目データ整理**: 送信日時、氏名、学年、振込日、振込金額、直接振込金額、寄付金、負担金、Tシャツ代、奨励会負担金、備考
- **2ページ目データ整理**: 送信日時、1ページ目氏名、寄付者名、寄付金額、返礼品、クリアファイル枚数、備考
- **寄付金一覧**: 氏名、備考、寄付金、負担金、Tシャツ代、奨励会負担金、振込合計金額、寄付・負担金計
- **返礼品一覧**: No.、学年、生徒氏名、各返礼品、クリアファイル

## 重要な注意事項
- GASのURLは`js/sheets.js`で設定
- 返礼品IDと名前のマッピングを適切に管理
- 金額計算の精度を保つ
- エラー時のユーザーフィードバックを提供

## 開発時の推奨事項
- 新しい機能追加時は既存のデータ構造を維持
- GASのログを活用してデバッグ
- フォーム送信前のデータ検証を徹底
- レスポンシブデザインの確認 